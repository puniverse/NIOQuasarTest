apply plugin: 'java'

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

ext.quasarVersion = '0.6.0-SNAPSHOT:jdk8'
ext.comsatVersion = '0.1.1'


if (!hasProperty('mainClass')) {
    ext.mainClass = ''
}

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}
configurations {
    quasar
}

dependencies {
    compile "co.paralleluniverse:quasar-core:$quasarVersion"
    compile "co.paralleluniverse:comsat-jax-rs-client:$comsatVersion"
    quasar "co.paralleluniverse:quasar-core:$quasarVersion"
}

tasks.withType(JavaExec) {
    jvmArgs "-XX:+UnlockCommercialFeatures"
    jvmArgs "-XX:+FlightRecorder"    
    jvmArgs "-XX:FlightRecorderOptions=settings=ultraProf.jfc"
//    jvmArgs "-XX:StartFlightRecording=duration=20s,filename="+name+".jfr"    
    jvmArgs "-javaagent:${configurations.quasar.iterator().next()}";
    classpath = sourceSets.main.runtimeClasspath   
}

task(runQuasarTP, dependsOn: 'classes', type: JavaExec) {
    main = 'co.paralleluniverse.quasartkb.MainIO2'
    systemProperty "co.paralleluniverse.scheduler", "tp"
}
task(runQuasarFJ, dependsOn: 'classes', type: JavaExec) {
    main = 'co.paralleluniverse.quasartkb.MainIO2'
    systemProperty "co.paralleluniverse.scheduler", "fj"
}
task(runQuasarIO1, dependsOn: 'classes', type: JavaExec) {
    main = 'co.paralleluniverse.quasartkb.MainIO2'
    systemProperty "co.paralleluniverse.scheduler", "io1"
}
task(runQuasarIO2, dependsOn: 'classes', type: JavaExec) {
    main = 'co.paralleluniverse.quasartkb.MainIO2'
    systemProperty "co.paralleluniverse.scheduler", "io2"
}
task(runQuasarFJ2, dependsOn: 'classes', type: JavaExec) {
    main = 'co.paralleluniverse.quasartkb.MainIO2'
    systemProperty "co.paralleluniverse.scheduler", "fj2"
}
task(runAsyncServerTP, dependsOn: 'classes', type: JavaExec) {
    main = 'co.paralleluniverse.quasartkb.AsyncServer'
    systemProperty "co.paralleluniverse.asyncChannelGroup", "tp"
}
task(runAsyncServerCached, dependsOn: 'classes', type: JavaExec) {
    main = 'co.paralleluniverse.quasartkb.AsyncServer'
    systemProperty "co.paralleluniverse.asyncChannelGroup", "cached"
}
task(runAsyncServerFixed, dependsOn: 'classes', type: JavaExec) {
    main = 'co.paralleluniverse.quasartkb.AsyncServer'
    systemProperty "co.paralleluniverse.asyncChannelGroup", "fixed"
}
task(runAsyncServerExecutor, dependsOn: 'classes', type: JavaExec) {
    main = 'co.paralleluniverse.quasartkb.AsyncServer'
    systemProperty "co.paralleluniverse.asyncChannelGroup", "executor"
}
task(runClients, dependsOn: 'classes', type: JavaExec) {
    main = 'co.paralleluniverse.quasartkb.ClientTesters'
}
defaultTasks 'runQuasarTP'

